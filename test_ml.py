#!/usr/bin/env python3
"""
Script para testar o sistema de Machine Learning do bot
"""

import os
import json
from clashroyalebuildabot.ml.data_collector import GameDataCollector
from clashroyalebuildabot.ml.ml_bot import MLBot

def main():
    print("=" * 60)
    print("    TESTE DO SISTEMA DE MACHINE LEARNING")
    print("=" * 60)
    print()
    
    print("ü§ñ SISTEMA DE ML IMPLEMENTADO:")
    print()
    print("‚úÖ Coleta de dados autom√°tica")
    print("‚úÖ Modelo Random Forest para predi√ß√£o")
    print("‚úÖ Sistema de recompensas inteligente")
    print("‚úÖ Treinamento cont√≠nuo")
    print("‚úÖ Aprendizado com cada partida")
    print()
    
    print("üìä COMO FUNCIONA:")
    print()
    print("1. O bot coleta dados de cada a√ß√£o:")
    print("   ‚Ä¢ Estado do jogo (elixir, HP das torres)")
    print("   ‚Ä¢ A√ß√£o tomada (carta, posi√ß√£o)")
    print("   ‚Ä¢ Resultado da a√ß√£o (recompensa)")
    print()
    print("2. Ap√≥s cada partida:")
    print("   ‚Ä¢ Analisa se ganhou ou perdeu")
    print("   ‚Ä¢ Calcula recompensas finais")
    print("   ‚Ä¢ Treina o modelo com os dados")
    print()
    print("3. Nas pr√≥ximas partidas:")
    print("   ‚Ä¢ Usa o modelo treinado para escolher a√ß√µes")
    print("   ‚Ä¢ Combina ML (70%) + l√≥gica original (30%)")
    print("   ‚Ä¢ Melhora continuamente com experi√™ncia")
    print()
    
    print("üéØ BENEF√çCIOS:")
    print()
    print("‚Ä¢ Aprende estrat√©gias espec√≠ficas do seu deck")
    print("‚Ä¢ Adapta-se ao seu estilo de jogo")
    print("‚Ä¢ Melhora com cada partida")
    print("‚Ä¢ Decis√µes mais inteligentes")
    print("‚Ä¢ Otimiza√ß√£o autom√°tica de elixir")
    print()
    
    print("üìÅ ARQUIVOS CRIADOS:")
    print()
    print("‚Ä¢ game_data.json - Dados das partidas")
    print("‚Ä¢ ml_model.pkl - Modelo treinado")
    print("‚Ä¢ clashroyalebuildabot/ml/ - M√≥dulo de ML")
    print()
    
    print("‚öôÔ∏è CONFIGURA√á√ÉO:")
    print()
    print("O ML est√° ativado por padr√£o no config.yaml:")
    print("ml:")
    print("  enabled: True")
    print("  model_path: ml_model.pkl")
    print("  data_path: game_data.json")
    print()
    
    print("üîß COMO USAR:")
    print()
    print("1. Execute: python main.py")
    print("2. Jogue algumas partidas normalmente")
    print("3. O bot come√ßar√° a aprender automaticamente")
    print("4. Ap√≥s 5+ partidas, ver√° melhorias no desempenho")
    print()
    
    print("üìà MONITORAMENTO:")
    print()
    print("‚Ä¢ Logs mostrar√£o 'ML score' quando treinado")
    print("‚Ä¢ Estat√≠sticas de vit√≥ria ser√£o exibidas")
    print("‚Ä¢ O modelo salva automaticamente")
    print()
    
    print("‚ö†Ô∏è IMPORTANTE:")
    print()
    print("‚Ä¢ O bot precisa de algumas partidas para aprender")
    print("‚Ä¢ Quanto mais partidas, melhor o desempenho")
    print("‚Ä¢ O modelo se adapta ao seu deck espec√≠fico")
    print("‚Ä¢ Dados s√£o salvos automaticamente")
    print()
    
    # Testa se os m√≥dulos est√£o funcionando
    print("üß™ TESTE DOS M√ìDULOS:")
    print()
    
    try:
        # Testa o coletor de dados
        collector = GameDataCollector("test_data.json")
        print("‚úÖ GameDataCollector funcionando")
        
        # Testa o modelo ML
        ml_bot = MLBot("test_model.pkl")
        print("‚úÖ MLBot funcionando")
        
        # Limpa arquivos de teste
        if os.path.exists("test_data.json"):
            os.remove("test_data.json")
        if os.path.exists("test_model.pkl"):
            os.remove("test_model.pkl")
        
        print("‚úÖ Todos os m√≥dulos funcionando corretamente!")
        
    except Exception as e:
        print(f"‚ùå Erro no teste: {e}")
        print("Verifique se scikit-learn e joblib est√£o instalados:")
        print("pip install scikit-learn joblib")
    
    print()
    print("üéâ PR√ìXIMOS PASSOS:")
    print()
    print("1. Execute o bot: python main.py")
    print("2. Jogue algumas partidas")
    print("3. Monitore os logs para ver o ML em a√ß√£o")
    print("4. Observe a melhoria no desempenho!")
    print()
    
    print("=" * 60)
    print("    BOA SORTE! O BOT VAI APRENDER! üöÄ")
    print("=" * 60)

if __name__ == "__main__":
    main()
